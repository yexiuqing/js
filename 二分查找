// 时间复杂度  o(N)
int binarySearch (int a[], int elem) {
	itn beg = 0;
	int end = a.length;
	int mid = 0;
	while (beg < end) {
		if(a[mid] < elem) {
			beg = mid + 1;
		} else if (a[mid] > elem) {
			end = a[mid] -1
		} else {
			return mid
		}
	}
	return -1;
}

// 时间复杂度 O(NlogN)
int binarySearch (int a[], int beg, int end, int elem) {
	mid = (beg + end) / 2;
	while (beg < end) {
		if(a[mid] < elem) {
			beg = mid + 1;
		} else if (a[mid] > elem) {
			end = a[mid] -1
		} else {
			return mid
		}
		return -1;
	}
	return binarySearch (a, beg, end, elem) 
}